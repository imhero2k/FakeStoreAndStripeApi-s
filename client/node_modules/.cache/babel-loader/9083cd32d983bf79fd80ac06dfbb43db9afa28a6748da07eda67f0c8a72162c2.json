{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksara\\\\Downloads\\\\lrfep_1737763280010\\\\usercode\\\\e-commerce\\\\client\\\\src\\\\pages\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { Card, CardActions, CardContent, Button, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearCart } from '../components/storeSlice';\nimport PaymentSuccessful from '../components/PaymentSuccessful';\nimport EmptyCart from '../components/EmptyCart';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#495057\",\n      fontFamily: \"inherit\",\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#6c757d\"\n      }\n    },\n    invalid: {\n      color: \"#dc3545\",\n      iconColor: \"#dc3545\"\n    }\n  }\n};\nfunction PaymentPage() {\n  _s();\n  const {\n    totalPrice,\n    cartItems,\n    isPaymentSuccessful\n  } = useSelector(state => state.store);\n  const dispatch = useDispatch();\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (!error && totalPrice !== 0) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(`/payment`, {\n          amount: Math.round(totalPrice * 100),\n          id\n        });\n        if (response.data.success) {\n          console.log(\"Successful Payment\");\n          dispatch(clearCart());\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isPaymentSuccessful && cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyCart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : !success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-div\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 500\n        },\n        className: \"payment-card\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 24\n            },\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: \"Complete Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_ELEMENT_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"pay-button\",\n            onClick: e => handleSubmit(e),\n            children: \"Pay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pay-credentials\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-number\",\n            children: \"*Test card number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), \"  4242 4242 4242 4242\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"*The other card details (expiry date, CVC, and ZIP) can be random.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PaymentSuccessful, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentPage, \"K0eVjjsNlDAm+nz3l0vkrtwLcZA=\", false, function () {\n  return [useSelector, useDispatch, useStripe, useElements];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","CardElement","useElements","useStripe","Card","CardActions","CardContent","Button","Typography","useDispatch","useSelector","clearCart","PaymentSuccessful","EmptyCart","axios","jsxDEV","_jsxDEV","CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","PaymentPage","_s","totalPrice","cartItems","isPaymentSuccessful","state","store","dispatch","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","Math","round","data","console","log","message","children","length","fileName","_jsxFileName","lineNumber","columnNumber","className","sx","maxWidth","gutterBottom","options","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ksara/Downloads/lrfep_1737763280010/usercode/e-commerce/client/src/pages/PaymentPage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { Card, CardActions, CardContent, Button, Typography} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearCart } from '../components/storeSlice';\r\nimport PaymentSuccessful from '../components/PaymentSuccessful';\r\nimport EmptyCart from '../components/EmptyCart';\r\nimport axios from 'axios';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#495057\",\r\n      fontFamily: \"inherit\",\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#6c757d\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#dc3545\",\r\n      iconColor: \"#dc3545\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction PaymentPage() {\r\n  const { totalPrice, cartItems, isPaymentSuccessful } = useSelector((state) => state.store);\r\n  const dispatch = useDispatch();\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement)\r\n    })\r\n\r\n    if (!error && totalPrice !== 0) {\r\n      try {\r\n        const {id} = paymentMethod;\r\n        const response = await axios.post(`/payment`, {\r\n          amount: Math.round(totalPrice * 100),\r\n          id\r\n        })\r\n\r\n        if (response.data.success) {\r\n          console.log(\"Successful Payment\")\r\n          dispatch(clearCart())\r\n          setSuccess(true)\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(\"Error\", error)\r\n      }\r\n    } else {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        !isPaymentSuccessful && cartItems.length === 0 ? \r\n        <EmptyCart /> \r\n        :\r\n          !success ?\r\n          <div className='payment-div'>\r\n            <Card \r\n              sx={{ maxWidth: 500 }} \r\n              className='payment-card'\r\n            >\r\n              <CardContent>\r\n                <Typography sx={{ fontSize: 24 }} color=\"text.secondary\" gutterBottom>\r\n                  Complete Payment\r\n                </Typography>\r\n                <br />\r\n                <CardElement options={CARD_ELEMENT_OPTIONS}/>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  className='pay-button' \r\n                  onClick={(e) => handleSubmit(e)}\r\n                >\r\n                  Pay\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n            <div className='pay-credentials'>\r\n              <Typography>\r\n                <span className='card-number'>*Test card number: </span>  4242 4242 4242 4242 \r\n              </Typography>\r\n              <Typography>\r\n                *The other card details (expiry date, CVC, and ZIP) can be random.\r\n              </Typography>\r\n            </div>\r\n          </div> \r\n          : \r\n          <PaymentSuccessful />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}