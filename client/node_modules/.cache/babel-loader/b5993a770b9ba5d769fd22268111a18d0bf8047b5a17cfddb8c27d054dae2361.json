{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  categories: [],\n  isCategoriesFetched: false,\n  totalCount: 0,\n  cartItems: [],\n  totalPrice: 0,\n  isPaymentSuccessful: false\n};\nexport const fetchCategories = createAsyncThunk('store/fetchCategories', async () => {\n  const response = await fetch('https://fakestoreapi.com/products/categories').then(res => res.json());\n  return response;\n});\nexport const storeSlice = createSlice({\n  name: 'store',\n  initialState: initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const existingCartItemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      if (existingCartItemIndex !== -1) {\n        state.cartItems[existingCartItemIndex].quantity = state.cartItems[existingCartItemIndex].quantity + 1;\n      } else {\n        let newCartItem = {\n          \"id\": action.payload.id,\n          \"data\": action.payload,\n          \"quantity\": 1\n        };\n        state.cartItems.push(newCartItem);\n      }\n      state.totalCount = state.totalCount + 1;\n      state.totalPrice = state.totalPrice + action.payload.price;\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\n    },\n    addItem: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      state.cartItems[itemIndex].quantity = state.cartItems[itemIndex].quantity + 1;\n      state.totalCount = state.totalCount + 1;\n      state.totalPrice = state.totalPrice + state.cartItems[itemIndex].data.price;\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\n    },\n    removeItem: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      state.totalPrice = state.totalPrice - state.cartItems[itemIndex].data.price;\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\n      if (state.cartItems[itemIndex].quantity === 1) {\n        state.cartItems = state.cartItems.filter(cartItem => cartItem.id !== action.payload.id);\n      } else {\n        state.cartItems[itemIndex].quantity = state.cartItems[itemIndex].quantity - 1;\n      }\n      state.totalCount = state.totalCount - 1;\n    },\n    clearItem: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      const countToRemove = state.cartItems[itemIndex].quantity;\n      state.totalPrice = state.totalPrice - state.cartItems[itemIndex].quantity * state.cartItems[itemIndex].data.price;\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\n      state.cartItems = state.cartItems.filter(cartItem => cartItem.id !== action.payload.id);\n      state.totalCount = state.totalCount - countToRemove;\n    },\n    clearCart: (state, action) => {\n      state.cartItems = [];\n      state.totalCount = 0;\n      state.totalPrice = 0;\n      state.isPaymentSuccessful = true;\n    }\n  },\n  extraReducers: {\n    [fetchCategories.pending]: (state, action) => {\n      state.isCategoriesFetched = false;\n    },\n    [fetchCategories.fulfilled]: (state, action) => {\n      state.isCategoriesFetched = true;\n      state.categories = action.payload;\n    },\n    [fetchCategories.rejected]: (state, action) => {\n      state.isCategoriesFetched = false;\n    }\n  }\n});\nexport const {\n  addToCart,\n  addItem,\n  removeItem,\n  clearItem,\n  clearCart\n} = storeSlice.actions;\nexport default storeSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","categories","isCategoriesFetched","totalCount","cartItems","totalPrice","isPaymentSuccessful","fetchCategories","response","fetch","then","res","json","storeSlice","name","reducers","addToCart","state","action","existingCartItemIndex","findIndex","cartItem","id","payload","quantity","newCartItem","push","price","Math","round","addItem","itemIndex","data","removeItem","filter","clearItem","countToRemove","clearCart","extraReducers","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/ksara/Downloads/lrfep_1737763280010/usercode/e-commerce/client/src/components/storeSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  isCategoriesFetched: false,\r\n  totalCount: 0,\r\n  cartItems: [],\r\n  totalPrice: 0,\r\n  isPaymentSuccessful: false,\r\n};\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n  'store/fetchCategories',\r\n  async () => {\r\n      const response = await fetch('https://fakestoreapi.com/products/categories')\r\n      .then((res) => res.json())\r\n\r\n      return response;\r\n  }\r\n)\r\n\r\nexport const storeSlice = createSlice({\r\n  name: 'store',\r\n  initialState: initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const existingCartItemIndex = state.cartItems.findIndex(\r\n        cartItem => cartItem.id === action.payload.id\r\n      );\r\n      \r\n      if(existingCartItemIndex !== -1) {\r\n        state.cartItems[existingCartItemIndex].quantity = state.cartItems[existingCartItemIndex].quantity + 1;\r\n      } else {\r\n        let newCartItem = {\r\n          \"id\": action.payload.id,\r\n          \"data\": action.payload,\r\n          \"quantity\": 1\r\n        }\r\n        state.cartItems.push(newCartItem);\r\n      }\r\n      state.totalCount = state.totalCount + 1;\r\n      state.totalPrice = state.totalPrice + action.payload.price;\r\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\r\n    },\r\n\r\n    addItem: (state, action) => {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        cartItem => cartItem.id === action.payload.id\r\n      );\r\n\r\n      state.cartItems[itemIndex].quantity = state.cartItems[itemIndex].quantity + 1;\r\n      state.totalCount = state.totalCount + 1;\r\n      state.totalPrice = state.totalPrice + state.cartItems[itemIndex].data.price;\r\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\r\n    },\r\n\r\n    removeItem: (state, action) => {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        cartItem => cartItem.id === action.payload.id\r\n      );\r\n      \r\n      state.totalPrice = state.totalPrice - state.cartItems[itemIndex].data.price;\r\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\r\n      if (state.cartItems[itemIndex].quantity === 1) {\r\n        state.cartItems = state.cartItems.filter(cartItem => cartItem.id !== action.payload.id);\r\n      } else {\r\n        state.cartItems[itemIndex].quantity = state.cartItems[itemIndex].quantity - 1;\r\n      }\r\n      state.totalCount = state.totalCount - 1;\r\n    }, \r\n\r\n    clearItem: (state, action) => {\r\n      const itemIndex = state.cartItems.findIndex(\r\n        cartItem => cartItem.id === action.payload.id\r\n      );\r\n\r\n      const countToRemove = state.cartItems[itemIndex].quantity;\r\n      state.totalPrice = state.totalPrice - (state.cartItems[itemIndex].quantity)*(state.cartItems[itemIndex].data.price);\r\n      state.totalPrice = Math.round(state.totalPrice * 100) / 100;\r\n      state.cartItems = state.cartItems.filter(cartItem => cartItem.id !== action.payload.id);\r\n      state.totalCount = state.totalCount - countToRemove;\r\n    },\r\n\r\n    clearCart: (state, action) => {\r\n      state.cartItems = [];\r\n      state.totalCount = 0;\r\n      state.totalPrice = 0;\r\n      state.isPaymentSuccessful = true\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [fetchCategories.pending]: (state, action) => {\r\n      state.isCategoriesFetched = false;\r\n    },\r\n    [fetchCategories.fulfilled]: (state, action) => {\r\n      state.isCategoriesFetched = true;\r\n      state.categories = action.payload;\r\n    },\r\n    [fetchCategories.rejected]: (state, action) => {\r\n      state.isCategoriesFetched = false;\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  addToCart,\r\n  addItem,\r\n  removeItem,\r\n  clearItem,\r\n  clearCart\r\n} = storeSlice.actions;\r\n\r\nexport default storeSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}